-- MySQL Script generated by MySQL Workbench
-- Wed Nov  7 13:53:50 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`vendor_account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`vendor_account` ;

CREATE TABLE IF NOT EXISTS `mydb`.`vendor_account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `account` VARCHAR(16) NOT NULL,
  `password` VARCHAR(16) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `gender` ENUM('Male', 'Female') NOT NULL,
  `age` SMALLINT NOT NULL,
  `phone` CHAR(8) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`customer_account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`customer_account` ;

CREATE TABLE IF NOT EXISTS `mydb`.`customer_account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `account` VARCHAR(16) NOT NULL,
  `password` VARCHAR(16) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `gender` ENUM('Male', 'Female') NOT NULL,
  `age` SMALLINT NOT NULL,
  `phone` CHAR(8) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`product` ;

CREATE TABLE IF NOT EXISTS `mydb`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `production_date` DATETIME NOT NULL,
  `expiration_date` DATETIME NOT NULL,
  `price` REAL NOT NULL,
  `count` REAL NOT NULL,
  `stock` INT NOT NULL,
  `vendor_account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_product_vendor_account1_idx` (`vendor_account_id` ASC),
  CONSTRAINT `fk_product_vendor_account1`
    FOREIGN KEY (`vendor_account_id`)
    REFERENCES `mydb`.`vendor_account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`order` ;

CREATE TABLE IF NOT EXISTS `mydb`.`order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `customer_account_id` INT NOT NULL,
  `phone` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `price` INT NULL,
  `order_date` DATETIME NULL,
  `delivery_date` DATETIME NULL,
  `status` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_buy_customer_account1_idx` (`customer_account_id` ASC),
  CONSTRAINT `fk_buy_customer_account1`
    FOREIGN KEY (`customer_account_id`)
    REFERENCES `mydb`.`customer_account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`points`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`points` ;

CREATE TABLE IF NOT EXISTS `mydb`.`points` (
  `point` SMALLINT NULL DEFAULT NULL,
  `customer_account_id` INT NOT NULL,
  PRIMARY KEY (`customer_account_id`),
  CONSTRAINT `fk_points_customer_account1`
    FOREIGN KEY (`customer_account_id`)
    REFERENCES `mydb`.`customer_account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`evaluation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`evaluation` ;

CREATE TABLE IF NOT EXISTS `mydb`.`evaluation` (
  `content` VARCHAR(200) NULL DEFAULT NULL,
  `time` DATETIME NULL DEFAULT NULL,
  `score` REAL NULL DEFAULT NULL,
  `order_id` INT NOT NULL,
  PRIMARY KEY (`order_id`),
  CONSTRAINT `fk_evaluation_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `mydb`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`product_has_vendor_account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`product_has_vendor_account` ;

CREATE TABLE IF NOT EXISTS `mydb`.`product_has_vendor_account` (
  `product_id` INT NOT NULL,
  `vendor_account_id` INT NOT NULL,
  PRIMARY KEY (`product_id`, `vendor_account_id`),
  INDEX `fk_product_has_vendor_account_vendor_account1_idx` (`vendor_account_id` ASC),
  INDEX `fk_product_has_vendor_account_product1_idx` (`product_id` ASC),
  CONSTRAINT `fk_product_has_vendor_account_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `mydb`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_has_vendor_account_vendor_account1`
    FOREIGN KEY (`vendor_account_id`)
    REFERENCES `mydb`.`vendor_account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`order_has_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`order_has_product` ;

CREATE TABLE IF NOT EXISTS `mydb`.`order_has_product` (
  `order_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`order_id`, `product_id`),
  INDEX `fk_order_has_product_product1_idx` (`product_id` ASC),
  INDEX `fk_order_has_product_order1_idx` (`order_id` ASC),
  CONSTRAINT `fk_order_has_product_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `mydb`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_has_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `mydb`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`return_order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`return_order` ;

CREATE TABLE IF NOT EXISTS `mydb`.`return_order` (
  `reason` VARCHAR(200) NOT NULL,
  `order_id` INT NOT NULL,
  PRIMARY KEY (`order_id`),
  CONSTRAINT `fk_return_order_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `mydb`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`extra_count`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`extra_count` ;

CREATE TABLE IF NOT EXISTS `mydb`.`extra_count` (
  `extra_count` REAL NOT NULL DEFAULT 1,
  `customer_account_id` INT NOT NULL,
  PRIMARY KEY (`customer_account_id`),
  CONSTRAINT `fk_extra_count_customer_account1`
    FOREIGN KEY (`customer_account_id`)
    REFERENCES `mydb`.`customer_account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`category` ;

CREATE TABLE IF NOT EXISTS `mydb`.`category` (
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`product_has_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`product_has_category` ;

CREATE TABLE IF NOT EXISTS `mydb`.`product_has_category` (
  `product_id` INT NOT NULL,
  `category_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`product_id`, `category_name`),
  INDEX `fk_product_has_category_category1_idx` (`category_name` ASC),
  INDEX `fk_product_has_category_product1_idx` (`product_id` ASC),
  CONSTRAINT `fk_product_has_category_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `mydb`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_has_category_category1`
    FOREIGN KEY (`category_name`)
    REFERENCES `mydb`.`category` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
